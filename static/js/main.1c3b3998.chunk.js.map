{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","goodsFromServer","App","state","visibleList","isReversed","sortByAlphabet","sortByLength","limit","adderList","setState","reverseList","sortList","reset","changeLimit","event","target","value","selectReset","this","visibleGoods","filter","length","sort","g1","g2","localeCompare","reverse","type","onClick","onChange","num","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uQAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,qBAAKC,UAAU,qBAAf,SACE,oBAAIA,UAAU,YAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,kBAAzB,SACGE,GADMA,WCRbC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAYWC,EAAb,4MACEC,MAAQ,CACNN,MAAOI,EACPG,aAAa,EACbC,YAAY,EACZC,gBAAgB,EAChBC,cAAc,EACdC,MAAO,GAPX,EAUEC,UAAY,WACV,EAAKC,UAAS,SAACP,GAAD,MAAY,CACxBC,aAAcD,EAAMC,iBAZ1B,EAgBEO,YAAc,WACZ,EAAKD,UAAS,SAACP,GAAD,MAAY,CACxBE,YAAaF,EAAME,gBAlBzB,EAsBEO,SAAW,WACT,EAAKF,SAAS,CACZJ,gBAAgB,EAChBC,cAAc,KAzBpB,EA6BEA,aAAe,WACb,EAAKG,SAAS,CACZH,cAAc,EACdD,gBAAgB,KAhCtB,EAoCEO,MAAQ,WACN,EAAKH,SAAS,CACZL,YAAY,EACZC,gBAAgB,EAChBC,cAAc,KAxCpB,EA4CEO,YAAc,SAACC,GACb,EAAKL,SAAS,CACZF,OAASO,EAAMC,OAA6BC,SA9ClD,EAkDEC,YAAc,WACZ,EAAKR,SAAS,CACZF,MAAO,KApDb,4CAwDE,WACE,MAOIW,KAAKhB,MANPN,EADF,EACEA,MACAO,EAFF,EAEEA,YACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,eACAC,EALF,EAKEA,aACAC,EANF,EAMEA,MAEIY,EAAevB,EAAMwB,QAAO,SAACrB,GAAD,OAAUA,EAAKsB,QAAUd,KAc3D,OAZIF,GACFc,EAAaG,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAG7ClB,GACFa,EAAaG,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGF,OAASG,EAAGH,UAG3CjB,GACFe,EAAaO,UAIb,sBAAK7B,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBACEM,GACA,wBACEwB,KAAK,SACLC,QAASV,KAAKV,UACdX,UAAU,4BAHZ,mBASDM,GACC,qCACE,cAAC,EAAD,CAAWP,MAAOuB,IAClB,sBAAKtB,UAAU,eAAf,UACE,wBACE8B,KAAK,SACLC,QAASV,KAAKR,YACdb,UAAU,cAHZ,qBAQA,wBACE8B,KAAK,SACLC,QAASV,KAAKP,SACdd,UAAU,cAHZ,iCAQA,wBACE8B,KAAK,SACLC,QAASV,KAAKZ,aACdT,UAAU,cAHZ,4BAQA,wBACE8B,KAAK,SACLC,QAASV,KAAKN,MACdf,UAAU,4BAHZ,sBASF,uBAAMA,UAAU,YAAhB,UACE,wBACEmB,MAAOT,EACPsB,SAAUX,KAAKL,YACfhB,UAAU,cAHZ,SAKG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIC,KAAI,SAACgC,GAAD,OACnC,wBAAQd,MAAOc,EAAf,SAAqBA,SAIzB,wBACEH,KAAK,SACLC,QAASV,KAAKD,YACdpB,UAAU,4BAHZ,uCA5Id,GAAyBkC,IAAMC,WCvB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1c3b3998.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.css';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <div className=\"GoodsList__wrapper\">\n      <ul className=\"GoodsList\">\n        {goods.map(good => (\n          <li key={good} className=\"GoodsList__link\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[];\n  visibleList: boolean;\n  isReversed: boolean;\n  sortByAlphabet: boolean;\n  sortByLength: boolean;\n  limit: number;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    visibleList: false,\n    isReversed: false,\n    sortByAlphabet: false,\n    sortByLength: false,\n    limit: 1,\n  };\n\n  adderList = () => {\n    this.setState((state) => ({\n      visibleList: !state.visibleList,\n    }));\n  };\n\n  reverseList = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortList = () => {\n    this.setState({\n      sortByAlphabet: true,\n      sortByLength: false,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortByLength: true,\n      sortByAlphabet: false,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortByAlphabet: false,\n      sortByLength: false,\n    });\n  };\n\n  changeLimit = (event: React.SyntheticEvent<EventTarget>) => {\n    this.setState({\n      limit: +(event.target as HTMLSelectElement).value,\n    });\n  };\n\n  selectReset = () => {\n    this.setState({\n      limit: 1,\n    });\n  };\n\n  render() {\n    const {\n      goods,\n      visibleList,\n      isReversed,\n      sortByAlphabet,\n      sortByLength,\n      limit,\n    } = this.state;\n    const visibleGoods = goods.filter((good) => good.length >= limit);\n\n    if (sortByAlphabet) {\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n    }\n\n    if (sortByLength) {\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods list</h1>\n        {!visibleList && (\n          <button\n            type=\"button\"\n            onClick={this.adderList}\n            className=\"App__button Button__start\"\n          >\n            Start\n          </button>\n        )}\n\n        {visibleList && (\n          <>\n            <GoodsList goods={visibleGoods} />\n            <div className=\"App__buttons\">\n              <button\n                type=\"button\"\n                onClick={this.reverseList}\n                className=\"App__button\"\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortList}\n                className=\"App__button\"\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortByLength}\n                className=\"App__button\"\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.reset}\n                className=\"App__button Button__reset\"\n              >\n                Reset\n              </button>\n            </div>\n\n            <form className=\"App__form\">\n              <select\n                value={limit}\n                onChange={this.changeLimit}\n                className=\"App__select\"\n              >\n                {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((num) => (\n                  <option value={num}>{num}</option>\n                ))}\n              </select>\n\n              <button\n                type=\"button\"\n                onClick={this.selectReset}\n                className=\"App__button Button__reset\"\n              >\n                Reset select\n              </button>\n            </form>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}